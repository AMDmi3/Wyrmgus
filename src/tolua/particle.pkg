$#include "particle.h"

struct CPosition
{
	CPosition(int x, int y) : x(x), y(y) {}
	float x;
	float y;
};

class GraphicAnimation
{
	GraphicAnimation(CGraphic *g, int ticksPerFrame);
	virtual GraphicAnimation * clone();
};

class CParticle
{
	virtual CParticle* clone();
	void setDrawLevel(int value);
};

class StaticParticle : public CParticle
{
public:
	//Wyrmgus start
//	StaticParticle(CPosition position, GraphicAnimation *animation, int drawlevel = 0);
	StaticParticle(CPosition position, int z, GraphicAnimation *animation, int drawlevel = 0);
	//Wyrmgus end
};

class CChunkParticle : public CParticle
{
public:
	//Wyrmgus start
//	CChunkParticle(CPosition position, GraphicAnimation *smokeAnimation, GraphicAnimation *debrisAnimation, GraphicAnimation *destroyAnimation, int minVelocity = 0, int maxVelocity = 400, int minTrajectoryAngle = 77, int maxTTL = 0, int drawlevel = 0);
	CChunkParticle(CPosition position, int z, GraphicAnimation *smokeAnimation, GraphicAnimation *debrisAnimation, GraphicAnimation *destroyAnimation, int minVelocity = 0, int maxVelocity = 400, int minTrajectoryAngle = 77, int maxTTL = 0, int drawlevel = 0);
	//Wyrmgus end
	int getSmokeDrawLevel() const;
	int getDestroyDrawLevel() const;
	void setSmokeDrawLevel(int value);
	void setDestroyDrawLevel(int value);
};

class CSmokeParticle : public CParticle
{
public:
	//Wyrmgus start
//	CSmokeParticle(CPosition position, GraphicAnimation *animation, float speedx = 0, float speedy = -22.0, int drawlevel = 0);
	CSmokeParticle(CPosition position, int z, GraphicAnimation *animation, float speedx = 0, float speedy = -22.0, int drawlevel = 0);
	//Wyrmgus end
};

class CRadialParticle : public CParticle
{
public:
	//Wyrmgus start
//	CRadialParticle(CPosition position, GraphicAnimation *smokeAnimation, int maxSpeed, int drawlevel = 0);
	CRadialParticle(CPosition position, int z, GraphicAnimation *smokeAnimation, int maxSpeed, int drawlevel = 0);
	//Wyrmgus end
};

class CParticleManager
{
public:
	CParticleManager();
	~CParticleManager();

	void add(CParticle *particle);
};

extern CParticleManager ParticleManager;

